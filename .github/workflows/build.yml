name: Build

on:
  pull_request:
    branches:
      - main

defaults:
 run:
  shell: bash

jobs:
  terraform_checks:
    name: Validate ${{ matrix.environment }}
    runs-on: "ubuntu-latest"
    env:
      TF_VAR_pagerduty_token: ${{ secrets.PAGERDUTY_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - environment: "development"

          - environment: "preproduction"

          - environment: "production"
    steps:
      - uses: actions/checkout@v2
      - name: "Set terraform version [${{ matrix.environment }}]"
        id: set-terraform-version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@ea1e81f43e7593acd74cc114085930f5f54914a2 # v3.1.7
        with:
          terraform_directory: ./infrastructure/terraform

      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ steps.set-terraform-version.outputs.version }}

      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          role-session-name: GitHubActionsTerraform
      - name: Setup Workspace
        run: echo TF_WORKSPACE=${{ matrix.environment }} >> $GITHUB_ENV

      - name: Terraform init
        working-directory: ./infrastructure/terraform
        run: |
          terraform init
      - name: Terraform formatting
        working-directory: ./infrastructure/terraform
        run: |
          terraform fmt -diff -check -recursive
      - name: Terraform validate
        working-directory: ./infrastructure/terraform
        run: |
          terraform validate

      - name: Terraform Plan
        working-directory: ./infrastructure/terraform
        run: |
          terraform plan -input=false

  shared_code:
    runs-on: "ubuntu-latest"
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - uses: unfor19/install-aws-cli-action@v1

    - name: Run Sirius service tests
      run: |
        python3 -m pip install -r shared_code/sirius_service/opg_sirius_service/requirements.txt
        python3 -m pytest shared_code/sirius_service/tests

    - name: Install packaging applications
      run: |
        python -m pip install --user --upgrade setuptools wheel twine

    # - name: package shared circleci
    #   working-directory: ./shared_code/circle
    #   run: |
    #     python setup.py sdist bdist_wheel

    # - name: package shared pact
    #   working-directory: ./shared_code/pact
    #   run: |
    #     python setup.py sdist bdist_wheel

    # - name: package shared sirius service
    #   working-directory: ./shared_code/sirius_service
    #   run: |
    #     python setup.py sdist bdist_wheel
