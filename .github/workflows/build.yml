name: Build

on:
  pull_request:
    branches:
      - main

defaults:
 run:
  shell: bash

jobs:
  terraform_checks:
    name: Validate ${{ matrix.environment }}
    runs-on: "ubuntu-latest"
    env:
      TF_VAR_pagerduty_token: ${{ secrets.PAGERDUTY_TOKEN }}
    strategy:
      max-parallel: 1
      matrix:
        include:
          - environment: "development"

          - environment: "preproduction"

          - environment: "production"
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          role-session-name: GitHubActionsTerraform
      - name: Setup Workspace
        run: echo TF_WORKSPACE=${{ matrix.environment }} >> $GITHUB_ENV

      - name: Terraform init
        working-directory: ./infrastructure/terraform
        run: |
          terraform init
      - name: Terraform formatting
        working-directory: ./infrastructure/terraform
        run: |
          terraform fmt -diff -check -recursive
      - name: Terraform validate
        working-directory: ./infrastructure/terraform
        run: |
          terraform validate

      - name: Terraform Plan
        working-directory: ./infrastructure/terraform
        run: |
          terraform plan -input=false

  shared_code:
    runs-on: "ubuntu-latest"
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - uses: unfor19/install-aws-cli-action@v1

    - name: Run Pact Tests
      working-directory: ./shared_code/pact/opg_pact
      run: |
        docker-compose up -d
        sleep 3
        docker-compose run python_tests python -m pytest
        docker-compose down

    - name: Run Sirius service tests
      run: |
        python3 -m pip install -r shared_code/sirius_service/opg_sirius_service/requirements.txt
        python3 -m pytest shared_code/sirius_service/tests

    - name: Install packaging applications
      run: |
        python -m pip install --user --upgrade setuptools wheel twine

    - name: package shared circleci
      working-directory: ./shared_code/circle
      run: |
        python setup.py sdist bdist_wheel

    - name: package shared pact
      working-directory: ./shared_code/pact
      run: |
        python setup.py sdist bdist_wheel

    - name: package shared sirius service
      working-directory: ./shared_code/sirius_service
      run: |
        python setup.py sdist bdist_wheel
